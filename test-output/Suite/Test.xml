<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="DESKTOP-UPVJF2U" failures="1" tests="1" name="Test" time="26.184" errors="0" timestamp="2022-07-13T15:17:45 IST">
  <testcase classname="com.vilcart.app.ReadLogin" name="ReadData" time="4.337">
    <failure type="org.openqa.selenium.JavascriptException" message="javascript error: angular is not defined
  (Session info: chrome=104.0.5112.39)
Build info: version: &amp;apos;4.2.2&amp;apos;, revision: &amp;apos;683ccb65d6&amp;apos;
System info: host: &amp;apos;DESKTOP-UPVJF2U&amp;apos;, ip: &amp;apos;192.168.0.132&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;18.0.1.1&amp;apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [2cefbd858258568d020b292f408f2115, executeScript {script=var using = arguments[0] || document;
var rootSelector = &amp;apos;&amp;quot;app-create-customers&amp;quot;&amp;apos;;
var model = &amp;apos;state&amp;apos;;

var getNg1Hooks = function(selector, injectorPlease) {
  function tryEl(el) {
    try {
      if (!injectorPlease &amp;amp;&amp;amp; angular.getTestability) {
        var $$testability = angular.getTestability(el);
        if ($$testability) {
          return {$$testability: $$testability};
        }
      } else {
        var $injector = angular.element(el).injector();
        if ($injector) {
          return {$injector: $injector};
        }
      }
    } catch(err) {}
  }
  function trySelector(selector) {
    var els = document.querySelectorAll(selector);
    for (var i = 0; i &amp;lt; els.length; i++) {
      var elHooks = tryEl(els[i]);
      if (elHooks) {
        return elHooks;
      }
    }
  }

  if (selector) {
    return trySelector(selector);
  } else if (window.__TESTABILITY__NG1_APP_ROOT_INJECTOR__) {
    var $injector = window.__TESTABILITY__NG1_APP_ROOT_INJECTOR__;
    var $$testability = null;
    try {
      $$testability = $injector.get(&amp;apos;$$testability&amp;apos;);
    } catch (e) {}
    return {$injector: $injector, $$testability: $$testability};
  } else {
    return tryEl(document.body) ||
        trySelector(&amp;apos;[ng-app]&amp;apos;) || trySelector(&amp;apos;[ng\\:app]&amp;apos;) ||
        trySelector(&amp;apos;[ng-controller]&amp;apos;) || trySelector(&amp;apos;[ng\\:controller]&amp;apos;);
  }
}

  using = using || document;

  if (angular.getTestability) {
    return getNg1Hooks(rootSelector).$$testability.
        findModels(using, model, true);
  }
  var prefixes = [&amp;apos;ng-&amp;apos;, &amp;apos;ng_&amp;apos;, &amp;apos;data-ng-&amp;apos;, &amp;apos;x-ng-&amp;apos;, &amp;apos;ng\\:&amp;apos;];
  for (var p = 0; p &amp;lt; prefixes.length; ++p) {
    var selector = &amp;apos;[&amp;apos; + prefixes[p] + &amp;apos;model=&amp;quot;&amp;apos; + model + &amp;apos;&amp;quot;]&amp;apos;;
    var elements = using.querySelectorAll(selector);
    if (elements.length) {
      return elements;
    }
  }
, args=[null]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 104.0.5112.39, chrome: {chromedriverVersion: 104.0.5112.29 (eff877e18f76..., userDataDir: C:\Users\win10\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:57194}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:57194/devtoo..., se:cdpVersion: 104.0.5112.39, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 2cefbd858258568d020b292f408f2115">
      <![CDATA[org.openqa.selenium.JavascriptException: javascript error: angular is not defined
  (Session info: chrome=104.0.5112.39)
Build info: version: '4.2.2', revision: '683ccb65d6'
System info: host: 'DESKTOP-UPVJF2U', ip: '192.168.0.132', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.1.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [2cefbd858258568d020b292f408f2115, executeScript {script=var using = arguments[0] || document;
var rootSelector = '"app-create-customers"';
var model = 'state';

var getNg1Hooks = function(selector, injectorPlease) {
  function tryEl(el) {
    try {
      if (!injectorPlease && angular.getTestability) {
        var $$testability = angular.getTestability(el);
        if ($$testability) {
          return {$$testability: $$testability};
        }
      } else {
        var $injector = angular.element(el).injector();
        if ($injector) {
          return {$injector: $injector};
        }
      }
    } catch(err) {}
  }
  function trySelector(selector) {
    var els = document.querySelectorAll(selector);
    for (var i = 0; i < els.length; i++) {
      var elHooks = tryEl(els[i]);
      if (elHooks) {
        return elHooks;
      }
    }
  }

  if (selector) {
    return trySelector(selector);
  } else if (window.__TESTABILITY__NG1_APP_ROOT_INJECTOR__) {
    var $injector = window.__TESTABILITY__NG1_APP_ROOT_INJECTOR__;
    var $$testability = null;
    try {
      $$testability = $injector.get('$$testability');
    } catch (e) {}
    return {$injector: $injector, $$testability: $$testability};
  } else {
    return tryEl(document.body) ||
        trySelector('[ng-app]') || trySelector('[ng\\:app]') ||
        trySelector('[ng-controller]') || trySelector('[ng\\:controller]');
  }
}

  using = using || document;

  if (angular.getTestability) {
    return getNg1Hooks(rootSelector).$$testability.
        findModels(using, model, true);
  }
  var prefixes = ['ng-', 'ng_', 'data-ng-', 'x-ng-', 'ng\\:'];
  for (var p = 0; p < prefixes.length; ++p) {
    var selector = '[' + prefixes[p] + 'model="' + model + '"]';
    var elements = using.querySelectorAll(selector);
    if (elements.length) {
      return elements;
    }
  }
, args=[null]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 104.0.5112.39, chrome: {chromedriverVersion: 104.0.5112.29 (eff877e18f76..., userDataDir: C:\Users\win10\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:57194}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:57194/devtoo..., se:cdpVersion: 104.0.5112.39, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 2cefbd858258568d020b292f408f2115
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:588)
at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:522)
at com.paulhammant.ngwebdriver.ByAngularModel.getObject(ByAngularModel.java:43)
at com.paulhammant.ngwebdriver.ByAngular$BaseBy.findElement(ByAngular.java:166)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$1.findElement(ElementLocation.java:136)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:80)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:406)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:398)
at com.vilcart.app.ReadLogin.ReadData(ReadLogin.java:148)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 28 stack frames]]>
    </failure>
  </testcase> <!-- ReadData -->
</testsuite> <!-- Test -->
